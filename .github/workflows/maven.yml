# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  compile:
    name: Compile everything
    runs-on: ubuntu-latest

    # allow 'Update dependency graph' step below to submit the generated graph
    permissions:
      contents: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build with Maven
      run: mvn -DskipTests install --file pom.xml
    - name: Cache build artifacts
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ hashFiles('~/.m2/repository/.cache/**/mishmash_io.patch*') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
      continue-on-error: true

  test:
    needs: compile
    runs-on: ubuntu-latest
    strategy:
      matrix:
        testset: ['coordination/base/', 'storage/block/base']
#    name: Testing ${{ testset }}
#
#    services:
#      otel-to-parquet:
#        image: mishmashio/opentelemetry-parquet-server
#        ports:
#          - 4317:4317
#          - 4318:4318
#        volumes:
#          - /tmp/tests-parquet/${{ testset }}:/parquet
#
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
#    - name: Download latest OpenTelemetry java agent
#      run: curl -L -o /tmp/opentelemetry-javaagent.jar https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/latest/download/opentelemetry-javaagent.jar
#    - name: Cache build artifacts
#      uses: actions/cache@v3
#      with:
#        path: ~/.m2/repository
#        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml', '~/.m2/repository/.cache/**/mishmash_io.patch*') }}
#        restore-keys: |
#          ${{ runner.os }}-maven-
#    - name: Run test set ${{ testset }}
#      env:
#        OTEL_SERVICE_NAME: maven-test-service
#        OTEL_EXPORTER_OTLP_PROTOCOL: grpc
#        OTEL_EXPORTER_OTLP_ENDPOINT: http://localhost:4317
#      run: cd tests/${{ testset }} && mvn -Dsurefire.rerunFailingTestsCount=2 -Dtest.instrumentation.opts=-javaagent:/tmp/opentelemetry-javaagent.jar --fail-at-end test --file pom.xml
#    - name: Upload telemetry logs
#      uses: actions/upload-artifact@v4
#      if: always()
#      continue-on-error: true
#      with:
#        name: build-telemetry-logs
#        path: /tmp/tests-parquet/${{ testset }}/logs-*.parquet
#    - name: Upload telemetry metrics
#      uses: actions/upload-artifact@v4
#      if: always()
#      continue-on-error: true
#      with:
#        name: build-telemetry-metrics
#        path: /tmp/tests-parquet/${{ testset }}/metrics-*.parquet
#    - name: Upload telemetry traces
#      uses: actions/upload-artifact@v4
#      if: always()
#      continue-on-error: true
#      with:
#        name: build-telemetry-traces
#        path: /tmp/tests-parquet/${{ testset }}/traces-*.parquet
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive

#    - name: Publish Test Report
#      if: success() || failure()
#      uses: scacap/action-surefire-report@v1
