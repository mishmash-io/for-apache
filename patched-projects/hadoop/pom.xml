<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2024 Mishmash IO UK Ltd.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.mishmash.stacks</groupId>
    <artifactId>distributed-computing-stacks</artifactId>
    <version>0.0.1</version>
    <relativePath>../../pom.xml</relativePath>
  </parent>

  <groupId>io.mishmash.stacks.patches</groupId>
  <artifactId>hadoop-patches</artifactId>
  <version>${hadoop.stable.version}-mmio.${hadoop.stable.mishmash.io.patch}</version>

  <name>mishmash io patches of Apache Hadoop</name>
  <description>
    This package contains Apache Hadoop code as modified by mishmash io. For more info on 
    the specific modifications by mishmash io visit our website and GitHub.

    It is recommended that you don't use this package directly, but rather - one or more of the 
    minimal data or compute stacks.
  </description>
  <url>https://mishmash.io/open_source/distributed-computing-stacks</url>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <organization>
    <name>mishmash io</name>
    <url>https://mishmash.io</url>
  </organization>

  <scm>
    <connection>scm:git:https://github.com/mishmash-io/for-apache.git</connection>
    <developerConnection>scm:git:https://github.com/mishmash-io/for-apache.git</developerConnection>
    <url>https://github.com/mishmash-io/for-apache</url>
  </scm>

  <developers>
    <developer>
      <name>Ivan Kountchev</name>
      <email>i.kountchev@mishmash.io</email>
      <organization>mishmash io</organization>
      <organizationUrl>https://mishmash.io</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <name>Andrey Rusev</name>
      <email>a.rusev@mishmash.io</email>
      <url>www.linkedin.com/in/andrey-rusev-21894172</url>
      <organization>mishmash io</organization>
      <organizationUrl>https://mishmash.io</organizationUrl>
      <roles>
        <role>architect</role>
      </roles>
    </developer>
  </developers>

  <properties>
    <httpcomponents.core.version>5.3.5</httpcomponents.core.version>
    <httpcomponents.client.version>5.5</httpcomponents.client.version>
    <jakarta-servlet.version>6.0.0</jakarta-servlet.version>
    <curator.version>5.9.0</curator.version>
    <wildfly-openssl.version>2.2.5.Final</wildfly-openssl.version>
    <jsp-api.version>4.0.0</jsp-api.version>
    <jersey.version>3.1.11</jersey.version>
    <dropwizard.metrics.version>4.2.36</dropwizard.metrics.version>
    <sshd.version>2.16.0</sshd.version>

    <hadoop.common.build.dir>${project.build.directory}</hadoop.common.build.dir>
    <hadoop.log.dir>${project.build.directory}/log</hadoop.log.dir>
    <hadoop.tmp.dir>${project.build.directory}/tmp</hadoop.tmp.dir>
    <java.security.egd>file:///dev/urandom</java.security.egd>
    <test.build.dir>${project.build.directory}/test-dir</test.build.dir>
    <test.build.data>${test.build.dir}</test.build.data>
    <test.cache.data>${project.build.directory}/test-classes</test.cache.data>
    <test.build.webapps>${project.build.directory}/test-classes/webapps</test.build.webapps>

    <!-- used for test deps -->
    <apacheds.version>2.0.0.AM27</apacheds.version>
    <ldap-api.version>2.1.7</ldap-api.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- the following deps are not patched, so, original artifacts are used -->
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-annotations</artifactId>
        <version>${hadoop.stable.version}</version>
      </dependency>

      <!-- commons dependencies -->
      <dependency>
        <groupId>commons-beanutils</groupId>
        <artifactId>commons-beanutils</artifactId>
        <version>1.11.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-configuration2</artifactId>
        <version>2.12.0</version>
        <exclusions>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>commons-daemon</groupId>
        <artifactId>commons-daemon</artifactId>
        <version>1.4.1</version>
      </dependency>
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.3.5</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-text</artifactId>
        <version>1.14.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-math3</artifactId>
        <version>3.6.1</version>
      </dependency>

      <!-- logging dependencies -->
      <dependency>
        <!-- TODO: remove in favour of log4j2 (used in KMSWebApp.java) -->
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <!-- http dependencies -->
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-util</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-util-ajax</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty.ee10</groupId>
        <artifactId>jetty-ee10-webapp</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.servlet</groupId>
        <artifactId>jakarta.servlet-api</artifactId>
        <version>${jakarta-servlet.version}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.activation</groupId>
        <artifactId>jakarta.activation-api</artifactId>
        <version>2.1.3</version>
      </dependency>
      <dependency>
        <groupId>jakarta.servlet.jsp</groupId>
        <artifactId>jakarta.servlet.jsp-api</artifactId>
        <version>${jsp-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.containers</groupId>
        <artifactId>jersey-container-servlet</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.inject</groupId>
        <artifactId>jersey-hk2</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents.core5</groupId>
        <artifactId>httpcore5</artifactId>
        <version>${httpcomponents.core.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents.client5</groupId>
        <artifactId>httpclient5</artifactId>
        <version>${httpcomponents.client.version}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.xml.bind</groupId>
        <artifactId>jakarta.xml.bind-api</artifactId>
        <version>4.0.2</version>
      </dependency>

      <!-- Updated to minimal ZooKeeper -->
      <dependency>
        <groupId>io.mishmash.stacks.quorum</groupId>
        <artifactId>quorum-client</artifactId>
        <version>${zookeeper.stable.version}-mmio.${zookeeper.stable.mishmash.io.patch}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-framework</artifactId>
        <version>${curator.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.zookeeper</groupId>
            <artifactId>zookeeper</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-client</artifactId>
        <version>${curator.version}</version>
        <exclusions>
          <!-- The following is already provided -->
          <exclusion>
            <groupId>org.apache.zookeeper</groupId>
            <artifactId>zookeeper</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-recipes</artifactId>
        <version>${curator.version}</version>
        <exclusions>
          <!-- The following is already provided -->
          <exclusion>
            <groupId>org.apache.zookeeper</groupId>
            <artifactId>zookeeper</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- Telemetry dependencies -->
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-core</artifactId>
        <version>${dropwizard.metrics.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-jmx</artifactId>
        <version>${dropwizard.metrics.version}</version>
      </dependency>

      <!-- security dependencies -->
      <dependency>
        <groupId>org.wildfly.openssl</groupId>
        <artifactId>wildfly-openssl-java</artifactId>
        <version>${wildfly-openssl.version}</version>
      </dependency>

      <!-- Other dependencies -->
      <dependency>
        <groupId>commons-net</groupId>
        <artifactId>commons-net</artifactId>
        <version>3.11.1</version>
      </dependency>
      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro</artifactId>
        <version>1.12.0</version>
      </dependency>
      <dependency>
        <groupId>com.google.re2j</groupId>
        <artifactId>re2j</artifactId>
        <version>1.8</version>
      </dependency>
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>${protobuf.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.mwiede</groupId>
        <artifactId>jsch</artifactId>
        <version>2.27.3</version>
      </dependency>
      <dependency>
        <groupId>dnsjava</groupId>
        <artifactId>dnsjava</artifactId>
        <version>3.6.3</version>
      </dependency>
      <dependency>
        <groupId>org.lz4</groupId>
        <artifactId>lz4-java</artifactId>
        <version>1.8.0</version>
      </dependency>
      <dependency>
        <groupId>org.fusesource.leveldbjni</groupId>
        <artifactId>leveldbjni-all</artifactId>
        <version>1.8</version>
      </dependency>

      <!-- test dependencies -->
      <dependency>
        <groupId>org.apache.ant</groupId>
        <artifactId>ant</artifactId>
        <version>1.10.15</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>mockwebserver3-junit5</artifactId>
        <version>5.1.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mock-server</groupId>
        <artifactId>mockserver-netty</artifactId>
        <version>5.15.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib-jdk8</artifactId>
        <version>2.2.20</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.mishmash.stacks.patches</groupId>
        <artifactId>zookeeper-patches</artifactId>
        <version>${zookeeper.stable.version}-mmio.${zookeeper.stable.mishmash.io.patch}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.mishmash.stacks.patches</groupId>
        <artifactId>zookeeper-patches</artifactId>
        <version>${zookeeper.stable.version}-mmio.${zookeeper.stable.mishmash.io.patch}</version>
        <scope>test</scope>
        <classifier>tests</classifier>
        <exclusions>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-test</artifactId>
        <version>${curator.version}</version>
        <scope>test</scope>
        <exclusions>
          <!-- The following is already provided -->
          <exclusion>
            <groupId>org.apache.zookeeper</groupId>
            <artifactId>zookeeper</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.directory.server</groupId>
        <artifactId>apacheds-core</artifactId>
        <version>${apacheds.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk15on</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.directory.server</groupId>
        <artifactId>apacheds-protocol-ldap</artifactId>
        <version>${apacheds.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.directory.server</groupId>
        <artifactId>apacheds-ldif-partition</artifactId>
        <version>${apacheds.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.directory.api</groupId>
        <artifactId>api-ldap-codec-core</artifactId>
        <version>${ldap-api.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.directory.api</groupId>
        <artifactId>api-ldap-model</artifactId>
        <version>${ldap-api.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.directory.server</groupId>
        <artifactId>apacheds-server-integ</artifactId>
        <version>${apacheds.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.directory.server</groupId>
        <artifactId>apacheds-core-integ</artifactId>
        <version>${apacheds.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.sshd</groupId>
        <artifactId>sshd-core</artifactId>
        <version>${sshd.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.sshd</groupId>
        <artifactId>sshd-sftp</artifactId>
        <version>${sshd.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.ftpserver</groupId>
        <artifactId>ftpserver-core</artifactId>
        <version>1.2.1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.ftpserver</groupId>
        <artifactId>ftplet-api</artifactId>
        <version>1.2.1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.wildfly.openssl</groupId>
        <artifactId>wildfly-openssl</artifactId>
        <version>${wildfly-openssl.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>3.27.4</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.codehaus.jettison</groupId>
        <artifactId>jettison</artifactId>
        <version>1.5.4</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>net.jcip</groupId>
        <artifactId>jcip-annotations</artifactId>
        <version>1.0</version>
        <scope>test</scope>
      </dependency>

      <!-- transitive deps upgrades -->
      <dependency>
        <groupId>com.jayway.jsonpath</groupId>
        <artifactId>json-path</artifactId>
        <version>2.9.0</version>
      </dependency>
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>2.4</version>
      </dependency>
      <dependency>
        <groupId>org.xmlunit</groupId>
        <artifactId>xmlunit-core</artifactId>
        <version>2.10.3</version>
      </dependency>
      <dependency>
        <groupId>org.xmlunit</groupId>
        <artifactId>xmlunit-placeholders</artifactId>
        <version>2.10.3</version>
      </dependency>
      <dependency>
        <groupId>org.apache.mina</groupId>
        <artifactId>mina-core</artifactId>
        <version>2.2.4</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-annotations</artifactId>
    </dependency>

    <!-- commons dependecies -->
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-math3</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-net</groupId>
      <artifactId>commons-net</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-configuration2</artifactId>
      <exclusions>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-daemon</groupId>
      <artifactId>commons-daemon</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
    </dependency>

    <!-- logging dependencies -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-jul</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j2-impl</artifactId>
    </dependency>

    <!-- http dependencies -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-util</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-util-ajax</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty.ee10</groupId>
      <artifactId>jetty-ee10-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty.ee10</groupId>
      <artifactId>jetty-ee10-webapp</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.servlet.jsp</groupId>
      <artifactId>jakarta.servlet.jsp-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.activation</groupId>
      <artifactId>jakarta.activation-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents.core5</groupId>
      <artifactId>httpcore5</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents.client5</groupId>
      <artifactId>httpclient5</artifactId>
    </dependency>
    <dependency>
      <groupId>com.nimbusds</groupId>
      <artifactId>nimbus-jose-jwt</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.xml.bind</groupId>
      <artifactId>jakarta.xml.bind-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>jaxb-runtime</artifactId>
      <version>4.0.5</version>
      <scope>runtime</scope>
    </dependency>

    <!-- netty dependencies -->
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-handler</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-transport-native-epoll</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-codec-http</artifactId>
    </dependency>

    <!-- Updated to mishmash io minimal ZooKeeper -->
    <dependency>
      <groupId>io.mishmash.stacks.quorum</groupId>
      <artifactId>quorum-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.curator</groupId>
      <artifactId>curator-framework</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.curator</groupId>
      <artifactId>curator-recipes</artifactId>
    </dependency>

    <!-- telemetry dependecies -->
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-jmx</artifactId>
    </dependency>

    <!-- security dependencies -->
    <dependency>
      <groupId>org.apache.kerby</groupId>
      <artifactId>kerb-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.kerby</groupId>
      <artifactId>kerb-util</artifactId>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk18on</artifactId>
    </dependency>
    <dependency>
      <groupId>org.wildfly.openssl</groupId>
      <artifactId>wildfly-openssl-java</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- other dependecies -->
    <dependency>
      <groupId>org.xerial.snappy</groupId>
      <artifactId>snappy-java</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.re2j</groupId>
      <artifactId>re2j</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.mwiede</groupId>
      <artifactId>jsch</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.woodstox</groupId>
      <artifactId>stax2-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.woodstox</groupId>
      <artifactId>woodstox-core</artifactId>
    </dependency>
    <dependency>
      <groupId>dnsjava</groupId>
      <artifactId>dnsjava</artifactId>
    </dependency>
    <dependency>
      <groupId>org.lz4</groupId>
      <artifactId>lz4-java</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.fusesource.leveldbjni</groupId>
      <artifactId>leveldbjni-all</artifactId>
    </dependency>
    <dependency>
      <groupId>com.lmax</groupId>
      <artifactId>disruptor</artifactId>
      <version>4.0.0</version>
      <scope>runtime</scope>
    </dependency>

    <!-- test dependencies -->
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.kerby</groupId>
      <artifactId>kerb-simplekdc</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.wildfly.openssl</groupId>
      <artifactId>wildfly-openssl</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>mockwebserver3-junit5</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-netty</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.mishmash.stacks.patches</groupId>
      <artifactId>zookeeper-patches</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.mishmash.stacks.patches</groupId>
      <artifactId>zookeeper-patches</artifactId>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.curator</groupId>
      <artifactId>curator-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.directory.server</groupId>
      <artifactId>apacheds-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.directory.server</groupId>
      <artifactId>apacheds-protocol-ldap</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.directory.server</groupId>
      <artifactId>apacheds-ldif-partition</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.directory.api</groupId>
      <artifactId>api-ldap-codec-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.directory.api</groupId>
      <artifactId>api-ldap-model</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.directory.server</groupId>
      <artifactId>apacheds-server-integ</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.directory.server</groupId>
      <artifactId>apacheds-core-integ</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sshd</groupId>
      <artifactId>sshd-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sshd</groupId>
      <artifactId>sshd-sftp</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.ftpserver</groupId>
      <artifactId>ftpserver-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk18on</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-console</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jettison</groupId>
      <artifactId>jettison</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.jcip</groupId>
      <artifactId>jcip-annotations</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.surefire</groupId>
      <artifactId>surefire-junit-platform</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.7.1</version>
      </extension>
    </extensions>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>io.github.git-commit-id</groupId>
        <artifactId>git-commit-id-maven-plugin</artifactId>
      </plugin>
      <!-- download original hadoop source code and mishmash io patches for it -->
      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>download-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>download-patch</id>
            <phase>initialize</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>https://github.com/mishmash-io/hadoop/compare/rel/release-${hadoop.stable.version}...mishmash-io:hadoop:patch-${hadoop.stable.version}_${hadoop.stable.mishmash.io.patch}.diff</url>
              <outputFileName>mishmash_io_hadoop.patch</outputFileName>
              <outputDirectory>${project.build.directory}</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>download-original-source</id>
            <phase>initialize</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>https://github.com/apache/hadoop/archive/refs/tags/rel/release-${hadoop.stable.version}.zip</url>
              <unpack>true</unpack>
              <outputDirectory>${project.build.directory}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- apply mishmash io patches to original source code -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-patch-plugin</artifactId>
        <executions>
          <execution>
            <id>patch-original-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>apply</goal>
            </goals>
            <configuration>
              <patchFile>${project.build.directory}/mishmash_io_hadoop.patch</patchFile>
              <patchTrackingFile>${project.build.directory}/mishmash_io_hadoop_changes.txt</patchTrackingFile>
              <strip>1</strip>
              <removeEmptyFiles>true</removeEmptyFiles>
              <targetDirectory>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}</targetDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Unshade the original sources -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>unshade-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <replace token="org.apache.hadoop.thirdparty.protobuf" value="com.google.protobuf" dir="${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}">
                  <include name="**/*.java"/>
                </replace>
                <replace token="org.apache.hadoop.thirdparty.com.google.common" value="com.google.common" dir="${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}">
                  <include name="**/*.java"/>
                </replace>
                <replace token="GeneratedMessageV3" value="GeneratedMessage" dir="${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-hdfs-project/hadoop-hdfs/src/main/java">
                  <include name="**/FSImageFormatProtobuf.java"/>
                </replace>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>create-web-xmls</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy file="${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/proto-web.xml"
                      tofile="${project.build.directory}/hdfs-webapps/webapps/hdfs/WEB-INF/web.xml"
                      filtering="true"/>
                <copy file="${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/proto-web.xml"
                      tofile="${project.build.directory}/hdfs-webapps/webapps/secondary/WEB-INF/web.xml"
                      filtering="true"/>
                <copy file="${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/proto-web.xml"
                      tofile="${project.build.directory}/hdfs-webapps/webapps/datanode/WEB-INF/web.xml"
                      filtering="true"/>
                <copy file="${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/proto-web.xml"
                      tofile="${project.build.directory}/hdfs-webapps/webapps/journal/WEB-INF/web.xml"
                      filtering="true"/>
                <copy file="${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/proto-web.xml"
                      tofile="${project.build.directory}/hdfs-webapps/webapps/nfs3/WEB-INF/web.xml"
                      filtering="true"/>
                <copy toDir="${project.build.directory}/hdfs-webapps/webapps">
                  <fileset dir="${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps">
                    <exclude name="**/proto-web.xml"/>
                  </fileset>
                </copy>
                <replace dir="${project.build.directory}/hdfs-webapps/webapps" value="${release-year}">
                  <include name="**/*.html"/>
                  <replacetoken>{release-year-token}</replacetoken>
                </replace>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>create-log-dir</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <!--
                TODO: there are tests (TestLocalFileSystem#testCopy) that fail if data
                TODO: from a previous run is present
                -->
                <delete dir="${test.build.data}"/>
                <mkdir dir="${test.build.data}"/>
                <mkdir dir="${hadoop.log.dir}"/>
                <mkdir dir="${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-common/target"/>

                <copy toDir="${project.build.directory}/test-classes">
                  <fileset dir="${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-common/src/main/conf"/>
                </copy>
              </target>
            </configuration>
          </execution>
          <!-- package and attach a jar of all sources with patches applied. Do it before tests are run as they run inside the same dir (and create files in it) -->
          <execution>
            <id>package-patched-sources</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <jar destfile="${project.build.directory}/${project.artifactId}-${project.version}-patched-sources.jar"
                      basedir="${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}"
                      includes="**"/>
                <attachartifact file="${project.build.directory}/${project.artifactId}-${project.version}-patched-sources.jar" classifier="patched-sources" type="jar"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Add the patched sources for compilation -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-sources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <!-- hadoop-auth -->
                <source>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-auth/src/main/java</source>
                <!-- hadoop common -->
                <source>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-common/src/main/java</source>
                <!-- hadoop kms -->
                <source>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-kms/src/main/java</source>
                <!-- hdfs client -->
                <source>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-hdfs-project/hadoop-hdfs-client/src/main/java</source>
                <!-- hdfs -->
                <source>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-hdfs-project/hadoop-hdfs/src/main/java</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-protobuf-sources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/protobuf-common/java</source>
                <source>${project.build.directory}/generated-sources/protobuf-hdfs-client/java</source>
                <source>${project.build.directory}/generated-sources/protobuf-hdfs/java</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-test-sources</id>
            <phase>process-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <!-- hadoop-minikdc is used only in tests, so add both sources and tests as test sources -->
                <source>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-minikdc/src/main/java</source>
                <source>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-minikdc/src/test/java</source>
                <!-- hadoop-auth -->
                <source>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-auth/src/test/java</source>
                <!-- hadoop-common -->
                <source>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-common/src/test/java</source>
                <!-- hadoop-kms -->
                <source>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-kms/src/test/java</source>
                <!-- hdfs client -->
                <source>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-hdfs-project/hadoop-hdfs-client/src/test/java</source>
                <!-- hdfs -->
                <source>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-hdfs-project/hadoop-hdfs/src/test/java</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-test-protobuf-sources</id>
            <phase>process-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-test-sources/protobuf/java</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-resources</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-common/src/main/resources</directory>
                  <excludes>
                    <exclude>**/common-version-info.properties</exclude>
                    <exclude>**/META-INF/services/**</exclude>
                  </excludes>
                </resource>
                <resource>
                  <directory>${project.build.directory}/hdfs-webapps</directory>
                </resource>
                <resource>
                  <directory>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-kms/src/main/resources</directory>
                  <includes>
                    <include>**/kms-default.xml</include>
                    <!-- drop webapps/static -->
                    <include>**/webapps/kms/**</include>
                  </includes>
                </resource>
                <resource>
                  <directory>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-hdfs-project/hadoop-hdfs/src/main/resources</directory>
                  <includes>
                    <include>**/hdfs-default.xml</include>
                  </includes>
                  <excludes>
                    <exclude>**/META-INF/**</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>add-test-resources</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-common/src/test/resources</directory>
                  <excludes>
                    **/META-INF/services/**,
                    **/log4j2.properties,
                    **/krb5.conf,
                    **/hadoop-policy.xml
                  </excludes>
                </resource>
                <resource>
                  <directory>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-kms/src/main/resources</directory>
                </resource>
                <resource>
                  <directory>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-kms/src/test/resources</directory>
                  <includes>
                    **/mini-kms-acls-default.xml,
                    **/log4j2-kmsaudit.properties
                  </includes>
                  <excludes>
                    **/log4j2.properties
                  </excludes>
                </resource>
                <resource>
                  <directory>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-hdfs-project/hadoop-hdfs/src/test/resources</directory>
                  <excludes>
                    **/META-INF/services/**,
                    **/log4j*.properties
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <version>0.6.1</version>
        <configuration>
          <protocArtifact>
            com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}
          </protocArtifact>
        </configuration>
        <executions>
          <execution>
            <id>compile-common-protobuf</id>
            <phase>generate-sources</phase>
            <configuration>
              <protoSourceRoot>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-common/src/main/proto</protoSourceRoot>
              <excludes>
                <exclude>ProtobufRpcEngine.proto</exclude>
              </excludes>
              <outputDirectory>${project.build.directory}/generated-sources/protobuf-common/java</outputDirectory>
            </configuration>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>compile-hdfs-client-protobuf</id>
            <phase>generate-sources</phase>
            <configuration>
              <protoSourceRoot>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-hdfs-project/hadoop-hdfs-client/src/main/proto</protoSourceRoot>
              <additionalProtoPathElements>
                <additionalProtoPathElement>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-common/src/main/proto</additionalProtoPathElement>
              </additionalProtoPathElements>
              <outputDirectory>${project.build.directory}/generated-sources/protobuf-hdfs-client/java</outputDirectory>
            </configuration>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>compile-hdfs-protobuf</id>
            <phase>generate-sources</phase>
            <configuration>
              <protoSourceRoot>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-hdfs-project/hadoop-hdfs/src/main/proto</protoSourceRoot>
              <additionalProtoPathElements>
                <additionalProtoPathElement>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-common/src/main/proto</additionalProtoPathElement>
                <additionalProtoPathElement>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-hdfs-project/hadoop-hdfs-client/src/main/proto</additionalProtoPathElement>
              </additionalProtoPathElements>
              <outputDirectory>${project.build.directory}/generated-sources/protobuf-hdfs/java</outputDirectory>
            </configuration>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>compile-protobuf-tests</id>
            <phase>generate-test-sources</phase>
            <configuration>
              <protoSourceRoot>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-common/src/test/proto</protoSourceRoot>
              <outputDirectory>${project.build.directory}/generated-test-sources/protobuf/java</outputDirectory>
            </configuration>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-maven-plugin</artifactId>
        <version>1.12.0</version>
        <executions>
          <execution>
            <id>generate-avro-test-sources</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>schema</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <testSourceDirectory>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-common/src/test/avro</testSourceDirectory>
          <testOutputDirectory>${project.build.directory}/generated-test-sources/java</testOutputDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <!-- TODO: ignoring duplicate package-info for now -->
          <excludes>
            <exclude>**/hadoop/security/authentication/server/package-info.java</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>default-testCompile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <!--
                exclude the following test, because it uses a way
                of tapping (mocking really) the built-in DNS client,
                a way that is no longer available since java 8.
              -->
              <testExcludes>
                <exclude>**/hadoop/hdfs/TestDFSClientFailover.java</exclude>
              </testExcludes>
              <compilerArgs>
                <!-- we use custom log4j2 plugins in tests to trap logging activity, make log4j happy about it: -->
                <arg>-Alog4j.graalvm.groupId=${project.groupId}</arg>
                <arg>-Alog4j.graalvm.artifactId=${project.artifactId}</arg>
              </compilerArgs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
          <argLine>-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -Djava.net.preferIPv4Stack=true -Dorg.apache.avro.SERIALIZABLE_PACKAGES=org.apache.hadoop.io,org.apache.hadoop.fs --add-opens=java.base/java.lang.reflect=ALL-UNNAMED ${test.instrumentation.opts}</argLine>
          <environmentVariables>
            <HADOOP_COMMON_HOME>${hadoop.common.build.dir}</HADOOP_COMMON_HOME>
            <!-- HADOOP_HOME required for tests on Windows to find winutils -->
            <HADOOP_HOME>${hadoop.common.build.dir}</HADOOP_HOME>
            <LD_LIBRARY_PATH>${env.LD_LIBRARY_PATH}:${project.build.directory}/native/target/usr/local/lib:${hadoop.common.build.dir}/native/target/usr/local/lib</LD_LIBRARY_PATH>
            <DYLD_LIBRARY_PATH>${env.DYLD_LIBRARY_PATH}:${project.build.directory}/native/target/usr/local/lib:${hadoop.common.build.dir}/native/target/usr/local/lib</DYLD_LIBRARY_PATH>
            <MALLOC_ARENA_MAX>4</MALLOC_ARENA_MAX>

            <!--
              Disable the servlet instrumentation for now, because the TestAuthenticationFilter
              uses Mockito.verifyNoMoreInteractions(<HttpServletResponse mocks>), and OpenTelemetry
              does interact with HttpServletResponse(s).

              Another solution might be to tell Otel to not instrument Mockito mocked classes, if it can recognize them
            -->
            <OTEL_INSTRUMENTATION_SERVLET_ENABLED>false</OTEL_INSTRUMENTATION_SERVLET_ENABLED>
            <OTEL_INSTRUMENTATION_LOG4J_APPENDER_ENABLED>false</OTEL_INSTRUMENTATION_LOG4J_APPENDER_ENABLED>
          </environmentVariables>
          <systemPropertyVariables>
            <hadoop.log.dir>${hadoop.log.dir}</hadoop.log.dir>
            <hadoop.tmp.dir>${hadoop.tmp.dir}</hadoop.tmp.dir>

            <test.build.dir>${test.build.dir}</test.build.dir>
            <test.build.data>${test.build.data}</test.build.data>
            <test.build.webapps>${test.build.webapps}</test.build.webapps>
            <test.cache.data>${test.cache.data}</test.cache.data>
            <test.build.classes>${project.build.directory}/test-classes</test.build.classes>

            <java.security.krb5.conf>${project.build.directory}/test-classes/krb5.conf</java.security.krb5.conf>
            <java.security.egd>${java.security.egd}</java.security.egd>
            <!--require.test.libhadoop>${require.test.libhadoop}</require.test.libhadoop-->

            <java.util.logging.manager>org.apache.logging.log4j.jul.LogManager</java.util.logging.manager>
          </systemPropertyVariables>
          <properties>
            <!-- set a default timeout of 10 minutes to all tests -->
            <configurationParameters>
              junit.jupiter.execution.timeout.default = 10m
            </configurationParameters>
          </properties>
          <!-- some tests require access to, for example src/main/webapps/static (of hadoop-common), run tests in the hadoop-common directory -->
          <workingDirectory>${project.build.directory}/hadoop-rel-release-${hadoop.stable.version}/hadoop-common-project/hadoop-common</workingDirectory>
          <includes>
            <include>**/Test*.java</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
</project>
